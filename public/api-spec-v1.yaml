openapi: 3.1.0
info:
  title: ''
  description: ''
  version: 0.0.0
servers:
  -
    url: /
    description: ''
paths:
  /api/v1/routes:
    get:
      operationId: api_routes_get_collection
      tags:
        - Route
      responses:
        '200':
          description: 'Route collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Route.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } }, example: { '@id': string, type: string, 'hydra:first': string, 'hydra:last': string, 'hydra:previous': string, 'hydra:next': string } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: [string, 'null'] }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Route-read'
      summary: 'Retrieves the collection of Route resources.'
      description: 'Retrieves the collection of Route resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
  '/api/v1/routes/{id}':
    get:
      operationId: api_routes_id_get
      tags:
        - Route
      responses:
        '200':
          description: 'Route resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Route.jsonld-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Route-read'
        '404':
          description: 'Resource not found'
      summary: 'Retrieves a Route resource.'
      description: 'Retrieves a Route resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Route identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
  /api/v1/tags:
    get:
      operationId: api_tags_get_collection
      tags:
        - Tag
      responses:
        '200':
          description: 'Tag collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Tag.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } }, example: { '@id': string, type: string, 'hydra:first': string, 'hydra:last': string, 'hydra:previous': string, 'hydra:next': string } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: [string, 'null'] }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tag-read'
      summary: 'Retrieves the collection of Tag resources.'
      description: 'Retrieves the collection of Tag resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
  '/api/v1/tags/{id}':
    get:
      operationId: api_tags_id_get
      tags:
        - Tag
      responses:
        '200':
          description: 'Tag resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Tag.jsonld-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Tag-read'
        '404':
          description: 'Resource not found'
      summary: 'Retrieves a Tag resource.'
      description: 'Retrieves a Tag resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Tag identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
components:
  schemas:
    PointOfInterest-read:
      type: object
      description: ''
      deprecated: false
      properties:
        id:
          readOnly: true
          type: integer
        subtitles:
          type: string
        name:
          type: string
        image:
          description: 'Image Url set by serializer (cf. EntityNormalizer).'
          type:
            - string
            - 'null'
        latitude:
          type: string
        longitude:
          type: string
        proximityToUnlock:
          description: 'Proximity to unlock in meters.'
          type:
            - integer
            - 'null'
        mediaUrl:
          format: uri
          externalDocs:
            url: 'https://schema.org/url'
          type: string
        mediaIsAudio:
          default: true
          example: true
          type:
            - boolean
            - 'null'
        mediaEmbedCode:
          description: 'Media embed code set by serializer (cf. EntityNormalizer).'
          type:
            - string
            - 'null'
      required:
        - name
        - latitude
        - longitude
        - proximityToUnlock
        - mediaUrl
    PointOfInterest.jsonld-read:
      type: object
      description: ''
      deprecated: false
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          type: integer
        subtitles:
          type: string
        name:
          type: string
        image:
          description: 'Image Url set by serializer (cf. EntityNormalizer).'
          type:
            - string
            - 'null'
        latitude:
          type: string
        longitude:
          type: string
        proximityToUnlock:
          description: 'Proximity to unlock in meters.'
          type:
            - integer
            - 'null'
        mediaUrl:
          format: uri
          externalDocs:
            url: 'https://schema.org/url'
          type: string
        mediaIsAudio:
          default: true
          example: true
          type:
            - boolean
            - 'null'
        mediaEmbedCode:
          description: 'Media embed code set by serializer (cf. EntityNormalizer).'
          type:
            - string
            - 'null'
      required:
        - name
        - latitude
        - longitude
        - proximityToUnlock
        - mediaUrl
    Route-read:
      type: object
      description: ''
      deprecated: false
      properties:
        id:
          readOnly: true
          type: integer
        title:
          type: string
        description:
          type: string
        distance:
          description: 'Distance in meters.'
          type: integer
        image:
          type:
            - string
            - 'null'
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag-read'
        totalDuration:
          description: 'Total duration in seconds.'
          type: integer
        points:
          type: array
          items:
            $ref: '#/components/schemas/PointOfInterest-read'
    Route.jsonld-read:
      type: object
      description: ''
      deprecated: false
      properties:
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        id:
          readOnly: true
          type: integer
        title:
          type: string
        description:
          type: string
        distance:
          description: 'Distance in meters.'
          type: integer
        image:
          type:
            - string
            - 'null'
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag.jsonld-read'
        totalDuration:
          description: 'Total duration in seconds.'
          type: integer
        points:
          type: array
          items:
            $ref: '#/components/schemas/PointOfInterest.jsonld-read'
    Tag-read:
      type: object
      description: ''
      deprecated: false
      properties:
        id:
          readOnly: true
          type: integer
        title:
          type: string
    Tag.jsonld-read:
      type: object
      description: ''
      deprecated: false
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          type: integer
        title:
          type: string
  responses: {  }
  parameters: {  }
  examples: {  }
  requestBodies: {  }
  headers: {  }
  securitySchemes:
    access_token:
      type: http
      scheme: bearer
security:
  -
    access_token: []
tags: []
webhooks: {  }
